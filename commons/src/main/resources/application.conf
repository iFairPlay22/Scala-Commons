akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  stdout-loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}

api {
    server-host = "0.0.0.0"
    server-host = ${?API_HOST}
    server-port = 8080
    server-port = ${?API_PORT}
}

datastax-java-driver {
  basic {

    contact-points = [ "cassandra:9042" ]
    contact-points = [ ${?DATABASE_CONTACT_POINT} ]

    session-keyspace = "system"
    session-keyspace = ${?DATABASE_KEYSPACE}

    load-balancing-policy.local-datacenter = "datacenter1"
    load-balancing-policy.local-datacenter = ${?DATABASE_DATACENTER}

    request.timeout = 30 seconds
  }
  advanced.reconnect-on-init = true
}

broker_consumer {
    topic = "ewenbouquet_unnamed_topic"
    topic = ${?BROKER_TOPIC}
}

kafka.consumer {
  discovery-method = akka.discovery
  service-name = ""
  resolve-timeout = 3 seconds
  poll-interval = 50ms
  poll-timeout = 50ms
  stop-timeout = 30s
  close-timeout = 20s
  commit-timeout = 15s
  commit-time-warning = 1s
  commit-refresh-interval = infinite
  use-dispatcher = "akka.kafka.default-dispatcher"
  kafka-clients {
    group.id = "group1"
    enable.auto.commit = true
    bootstrap.servers = "broker:9092"
    bootstrap.servers = ${?BROKER_BOOTSTRAP_SERVERS}
  }
  wait-close-partition = 500ms
  position-timeout = 5s
  offset-for-times-timeout = 5s
  metadata-request-timeout = 5s
  eos-draining-check-interval = 30ms
  partition-handler-warning = 5s
  connection-checker {
    enable = false
    max-retries = 3
    check-interval = 15s
    backoff-factor = 2.0
  }
  offset-reset-protection {
    enable = false
    offset-threshold = 9223372036854775807
    time-threshold = 100000 days
  }
}

broker_producer {
    topic = "ewenbouquet_unnamed_topic"
    topic = ${?BROKER_TOPIC}

    scheduler {
        initial-delay = 5 seconds
        initial-delay = ${?BROKER_SCHEDULER_INITIAL_DELAY}

        refresh-delay = 1 minute
        refresh-delay = ${?BROKER_SCHEDULER_REFRESH_DELAY}
    }
}

kafka.producer {
    discovery-method = akka.discovery
    service-name = ""
    resolve-timeout = 3 seconds
    parallelism = 10000
    close-timeout = 60s
    close-on-producer-stop = true
    use-dispatcher = "akka.kafka.default-dispatcher"
    eos-commit-interval = 100ms
    kafka-clients.bootstrap.servers = "broker:9092"
    kafka-clients.bootstrap.servers = ${?BROKER_BOOTSTRAP_SERVERS}
}
